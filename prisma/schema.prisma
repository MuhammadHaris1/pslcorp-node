// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @unique @default(uuid())
  email          String           @unique
  password       String
  refreshTokens  RefreshToken[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  StripeCustomer StripeCustomer?
  StripeVendor   StripeVendor[]
  Payment        Payment[]
  Transaction    Transaction[]
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model StripeCustomer {
  id            String          @id
  user          User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String          @unique
  PaymentMethod PaymentMethod[]
}

model StripeVendor {
  id            String          @id
  user          User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String          @unique
  PaymentMethod PaymentMethod[]
}

model PaymentMethod {
  id               String         @id
  brand            String
  exp_month        Int
  stripeCustomer   StripeCustomer @relation(fields: [stripeCustomerId], references: [id], onDelete: Cascade)
  stripeCustomerId String
  exp_year         Int
  last4            String
  stripeVendor     StripeVendor?  @relation(fields: [stripeVendorId], references: [id], onDelete: Cascade)
  stripeVendorId   String?
  Payment          Payment[]
}

model Payment {
  id              String        @id
  amount          Int
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id], onDelete: Cascade)
  paymentMethodId String
}

model Transaction {
  id          BigInt          @id @default(autoincrement())
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  type        TransactionType @default(Credit)
  amount      Int
  createdAt   DateTime?       @default(now())
  availableAt DateTime?       @default(now())
}

enum TransactionType {
  Credit
  Debit
}
